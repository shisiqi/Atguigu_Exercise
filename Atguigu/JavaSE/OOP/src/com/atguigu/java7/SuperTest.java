package com.atguigu.java7;

/**
 *super关键字的使用
 * 1.super：父类的
 * 2.super可以用来调用：属性，方法，构造器
 * 3.super的使用：
 *  3.1我们可以在子类的方法或者构造器中。通过使用"super.属性"或"super.方法"的方式，
 *  显式地调用父类中声明的属性或方法。但是通常情况下，我们习惯省略"super."
 *  3.2 特殊情况：当子类和父类定义了同名的属性时，我们要想在子类中调用父类中声明的属性，必须显式地使用super.属性
 *  的方式，表明了调用的是父类中声明的属性。
 *  3.3 特殊情况：当子类重写了父类中的方法时，我们想在子类中的方法调用父类中被重写的方法时，
 *  必须显式地使用super.方法的方式，表明了调用的是父类中声明的方法
 *
 * 4.super调用构造器
 *  4.1我们可以在子类构造器中显式地使用"super(形参列表)"的方式，调用父类中声明的指定的构造器
 *  4.2"super(形参列表)"必须声明在子类构造器的首行！
 *  4.3我们在类的构造器中，针对于"this(参数列表)"或"super(参数列表)"只能二选一；
 *  一个是调用本类的重载构造器，一个是调用父类的构造器，二者只能选择一个；由于两种
 *  调用方式都要求必须放在构造器的第一行，因此只能选择一个放在首行
 *  4.4在构造器的首行，没有显式地使用"super(形参列表)"或者"this(形参列表)"，则默认
 *  调用的是父类中的空参构造器"super()"；如何验证？我们只需要在父类的空参构造器中输出一句话即可
 *  4.5在类的多个构造器中，至少有一个类的构造器中使用了"super(形参列表)"，调用父类的构造器
 *
 */
public class SuperTest {
    public static void main(String[] args) {
        Student s = new Student();
        s.show();//id = 101 id = 100

        s.study();//学生：学习知识  学生：多吃有营养的食物 人：吃饭


    }
}
