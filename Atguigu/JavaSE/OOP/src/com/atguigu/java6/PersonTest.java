package com.atguigu.java6;

/**
 *  方法的重写
 *  1.重写：子类继承父类以后，可以对父类中同名同参数的方法，进行覆盖操作
 *  2.应用，重写以后，当创建子类对象以后，通过子类对象调用子父类中的同名同参数的方法时，实际执行的是子类重写父类的对象
 *  3.重写的规定：
 *      方法的声明：权限修饰符 返回值类型 方法名（形参列表）{
                        //方法体
                    }
        1）子类重写的方法名和形参列表与父类被重写的方法的方法名和参数列表相同
        2）子类重写的权限修饰符不小于父类被重写的方法的权限修饰符
        （可以理解为子类只有权限比父类大了，才能实现对父类的扩展）
        特殊情况：子类不能重写父类中声明为private权限的方法
        3）返回值类型：
            1.父类被重写的方法的返回值类型是void,则子类重写的方法的返回值类型也必须是void
            2.父类被重写的方法的返回值类型是A类型，则子类重写的方法的返回值类型可以实A类或者A类的子类
            3.父类被重写的方法的返回值类型是基本数据类型，则子类重写的方法的返回值类型必须是相同的基本数据类型
            4.子类重写方法抛出的异常类型不大于父类被重写的方法抛出的异常类型
 */
public class PersonTest {
    public static void main(String[] args) {
        Student s = new Student("数学");
        s.eat();
        s.walk(10);
        s.study();
    }
}
